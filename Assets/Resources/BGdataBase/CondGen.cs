using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class d_MonsterData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new d_MonsterData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new d_MonsterData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4996445916430306603,3638004110511368067));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.Int32 f_HP
	{
		get
		{
			return _f_HP[Index];
		}
		set
		{
			_f_HP[Index] = value;
		}
	}
	public System.Single f_Speed
	{
		get
		{
			return _f_Speed[Index];
		}
		set
		{
			_f_Speed[Index] = value;
		}
	}
	public System.Single f_Att
	{
		get
		{
			return _f_Att[Index];
		}
		set
		{
			_f_Att[Index] = value;
		}
	}
	public System.Single f_AttSpeed
	{
		get
		{
			return _f_AttSpeed[Index];
		}
		set
		{
			_f_AttSpeed[Index] = value;
		}
	}
	public System.Single f_AttRange
	{
		get
		{
			return _f_AttRange[Index];
		}
		set
		{
			_f_AttRange[Index] = value;
		}
	}
	public System.Single f_BloodCnt
	{
		get
		{
			return _f_BloodCnt[Index];
		}
		set
		{
			_f_BloodCnt[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5339696314988819107,13964914946922935447));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_HP;
	public static BansheeGz.BGDatabase.BGFieldInt _f_HP
	{
		get
		{
			if(_ufle12jhs77_f_HP==null || _ufle12jhs77_f_HP.IsDeleted) _ufle12jhs77_f_HP=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5655245077357824210,1886622066788404127));
			return _ufle12jhs77_f_HP;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_Speed;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_Speed
	{
		get
		{
			if(_ufle12jhs77_f_Speed==null || _ufle12jhs77_f_Speed.IsDeleted) _ufle12jhs77_f_Speed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5400905824095379909,1147203316202728628));
			return _ufle12jhs77_f_Speed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_Att;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_Att
	{
		get
		{
			if(_ufle12jhs77_f_Att==null || _ufle12jhs77_f_Att.IsDeleted) _ufle12jhs77_f_Att=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4708013507654742826,12335998874427475085));
			return _ufle12jhs77_f_Att;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_AttSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_AttSpeed
	{
		get
		{
			if(_ufle12jhs77_f_AttSpeed==null || _ufle12jhs77_f_AttSpeed.IsDeleted) _ufle12jhs77_f_AttSpeed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5576179052421708778,8892601362576125077));
			return _ufle12jhs77_f_AttSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_AttRange;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_AttRange
	{
		get
		{
			if(_ufle12jhs77_f_AttRange==null || _ufle12jhs77_f_AttRange.IsDeleted) _ufle12jhs77_f_AttRange=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5496657371841676373,3802716890331060631));
			return _ufle12jhs77_f_AttRange;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_BloodCnt;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_BloodCnt
	{
		get
		{
			if(_ufle12jhs77_f_BloodCnt==null || _ufle12jhs77_f_BloodCnt.IsDeleted) _ufle12jhs77_f_BloodCnt=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5335339494832708555,4838811026417368751));
			return _ufle12jhs77_f_BloodCnt;
		}
	}
	private static readonly d_MonsterData.Factory _factory0_PFS = new d_MonsterData.Factory();
	private d_MonsterData() : base(MetaDefault)
	{
	}
	private d_MonsterData(BGId id) : base(MetaDefault, id)
	{
	}
	private d_MonsterData(BGMetaEntity meta) : base(meta)
	{
	}
	private d_MonsterData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static d_MonsterData FindEntity(Predicate<d_MonsterData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((d_MonsterData) entity)) as d_MonsterData;
	}
	public static List<d_MonsterData> FindEntities(Predicate<d_MonsterData> filter, List<d_MonsterData> result=null, Comparison<d_MonsterData> sort=null)
	{
		result = result ?? new List<d_MonsterData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((d_MonsterData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((d_MonsterData) e1, (d_MonsterData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((d_MonsterData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<d_MonsterData> action, Predicate<d_MonsterData> filter=null, Comparison<d_MonsterData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((d_MonsterData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((d_MonsterData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((d_MonsterData)e1,(d_MonsterData)e2));
	}
	public static d_MonsterData GetEntity(BGId entityId)
	{
		return (d_MonsterData) MetaDefault.GetEntity(entityId);
	}
	public static d_MonsterData GetEntity(int index)
	{
		return (d_MonsterData) MetaDefault[index];
	}
	public static d_MonsterData GetEntity(string entityName)
	{
		return (d_MonsterData) MetaDefault.GetEntity(entityName);
	}
	public static d_MonsterData NewEntity()
	{
		return (d_MonsterData) MetaDefault.NewEntity();
	}
}
#pragma warning restore 414
