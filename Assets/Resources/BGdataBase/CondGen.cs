using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class d_MonsterData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new d_MonsterData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new d_MonsterData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4996445916430306603,3638004110511368067));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.Int32 f_HP
	{
		get
		{
			return _f_HP[Index];
		}
		set
		{
			_f_HP[Index] = value;
		}
	}
	public System.Single f_Speed
	{
		get
		{
			return _f_Speed[Index];
		}
		set
		{
			_f_Speed[Index] = value;
		}
	}
	public System.Single f_Att
	{
		get
		{
			return _f_Att[Index];
		}
		set
		{
			_f_Att[Index] = value;
		}
	}
	public System.Single f_AttSpeed
	{
		get
		{
			return _f_AttSpeed[Index];
		}
		set
		{
			_f_AttSpeed[Index] = value;
		}
	}
	public System.Single f_AttRange
	{
		get
		{
			return _f_AttRange[Index];
		}
		set
		{
			_f_AttRange[Index] = value;
		}
	}
	public System.Single f_BloodCnt
	{
		get
		{
			return _f_BloodCnt[Index];
		}
		set
		{
			_f_BloodCnt[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5339696314988819107,13964914946922935447));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_HP;
	public static BansheeGz.BGDatabase.BGFieldInt _f_HP
	{
		get
		{
			if(_ufle12jhs77_f_HP==null || _ufle12jhs77_f_HP.IsDeleted) _ufle12jhs77_f_HP=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5655245077357824210,1886622066788404127));
			return _ufle12jhs77_f_HP;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_Speed;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_Speed
	{
		get
		{
			if(_ufle12jhs77_f_Speed==null || _ufle12jhs77_f_Speed.IsDeleted) _ufle12jhs77_f_Speed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5400905824095379909,1147203316202728628));
			return _ufle12jhs77_f_Speed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_Att;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_Att
	{
		get
		{
			if(_ufle12jhs77_f_Att==null || _ufle12jhs77_f_Att.IsDeleted) _ufle12jhs77_f_Att=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4708013507654742826,12335998874427475085));
			return _ufle12jhs77_f_Att;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_AttSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_AttSpeed
	{
		get
		{
			if(_ufle12jhs77_f_AttSpeed==null || _ufle12jhs77_f_AttSpeed.IsDeleted) _ufle12jhs77_f_AttSpeed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5576179052421708778,8892601362576125077));
			return _ufle12jhs77_f_AttSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_AttRange;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_AttRange
	{
		get
		{
			if(_ufle12jhs77_f_AttRange==null || _ufle12jhs77_f_AttRange.IsDeleted) _ufle12jhs77_f_AttRange=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5496657371841676373,3802716890331060631));
			return _ufle12jhs77_f_AttRange;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_BloodCnt;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_BloodCnt
	{
		get
		{
			if(_ufle12jhs77_f_BloodCnt==null || _ufle12jhs77_f_BloodCnt.IsDeleted) _ufle12jhs77_f_BloodCnt=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5335339494832708555,4838811026417368751));
			return _ufle12jhs77_f_BloodCnt;
		}
	}
	private static readonly d_MonsterData.Factory _factory0_PFS = new d_MonsterData.Factory();
	private static readonly d_PlayerData.Factory _factory1_PFS = new d_PlayerData.Factory();
	private static readonly d_NpcReward.Factory _factory2_PFS = new d_NpcReward.Factory();
	private static readonly d_ObjData.Factory _factory3_PFS = new d_ObjData.Factory();
	private static readonly d_test.Factory _factory4_PFS = new d_test.Factory();
	private static readonly d_TextTest.Factory _factory5_PFS = new d_TextTest.Factory();
	private static readonly d_TalkData.Factory _factory6_PFS = new d_TalkData.Factory();
	private d_MonsterData() : base(MetaDefault)
	{
	}
	private d_MonsterData(BGId id) : base(MetaDefault, id)
	{
	}
	private d_MonsterData(BGMetaEntity meta) : base(meta)
	{
	}
	private d_MonsterData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static d_MonsterData FindEntity(Predicate<d_MonsterData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((d_MonsterData) entity)) as d_MonsterData;
	}
	public static List<d_MonsterData> FindEntities(Predicate<d_MonsterData> filter, List<d_MonsterData> result=null, Comparison<d_MonsterData> sort=null)
	{
		result = result ?? new List<d_MonsterData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((d_MonsterData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((d_MonsterData) e1, (d_MonsterData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((d_MonsterData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<d_MonsterData> action, Predicate<d_MonsterData> filter=null, Comparison<d_MonsterData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((d_MonsterData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((d_MonsterData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((d_MonsterData)e1,(d_MonsterData)e2));
	}
	public static d_MonsterData GetEntity(BGId entityId)
	{
		return (d_MonsterData) MetaDefault.GetEntity(entityId);
	}
	public static d_MonsterData GetEntity(int index)
	{
		return (d_MonsterData) MetaDefault[index];
	}
	public static d_MonsterData GetEntity(string entityName)
	{
		return (d_MonsterData) MetaDefault.GetEntity(entityName);
	}
	public static d_MonsterData NewEntity()
	{
		return (d_MonsterData) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class d_PlayerData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new d_PlayerData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new d_PlayerData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5256914230074536749,13187996397603669638));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.Single f_HP
	{
		get
		{
			return _f_HP[Index];
		}
		set
		{
			_f_HP[Index] = value;
		}
	}
	public System.Single f_MaxBlood
	{
		get
		{
			return _f_MaxBlood[Index];
		}
		set
		{
			_f_MaxBlood[Index] = value;
		}
	}
	public System.Single f_att
	{
		get
		{
			return _f_att[Index];
		}
		set
		{
			_f_att[Index] = value;
		}
	}
	public System.Single f_speed
	{
		get
		{
			return _f_speed[Index];
		}
		set
		{
			_f_speed[Index] = value;
		}
	}
	public System.Single f_dashPower
	{
		get
		{
			return _f_dashPower[Index];
		}
		set
		{
			_f_dashPower[Index] = value;
		}
	}
	public System.Single f_jumpPower
	{
		get
		{
			return _f_jumpPower[Index];
		}
		set
		{
			_f_jumpPower[Index] = value;
		}
	}
	public System.Single f_attSpeed
	{
		get
		{
			return _f_attSpeed[Index];
		}
		set
		{
			_f_attSpeed[Index] = value;
		}
	}
	public System.Int32 f_dashCnt
	{
		get
		{
			return _f_dashCnt[Index];
		}
		set
		{
			_f_dashCnt[Index] = value;
		}
	}
	public System.Single f_dashCoolTime
	{
		get
		{
			return _f_dashCoolTime[Index];
		}
		set
		{
			_f_dashCoolTime[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5131886411663381547,17874811727491851399));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_HP;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_HP
	{
		get
		{
			if(_ufle12jhs77_f_HP==null || _ufle12jhs77_f_HP.IsDeleted) _ufle12jhs77_f_HP=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5261247971559687039,6381648331135180934));
			return _ufle12jhs77_f_HP;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_MaxBlood;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_MaxBlood
	{
		get
		{
			if(_ufle12jhs77_f_MaxBlood==null || _ufle12jhs77_f_MaxBlood.IsDeleted) _ufle12jhs77_f_MaxBlood=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5167706758831567330,16319482871070299819));
			return _ufle12jhs77_f_MaxBlood;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_att;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_att
	{
		get
		{
			if(_ufle12jhs77_f_att==null || _ufle12jhs77_f_att.IsDeleted) _ufle12jhs77_f_att=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5013235073814893058,12683349894572286081));
			return _ufle12jhs77_f_att;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_speed;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_speed
	{
		get
		{
			if(_ufle12jhs77_f_speed==null || _ufle12jhs77_f_speed.IsDeleted) _ufle12jhs77_f_speed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4616277905970282001,2353523970049356953));
			return _ufle12jhs77_f_speed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_dashPower;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_dashPower
	{
		get
		{
			if(_ufle12jhs77_f_dashPower==null || _ufle12jhs77_f_dashPower.IsDeleted) _ufle12jhs77_f_dashPower=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4662344933355631685,4250120464863478157));
			return _ufle12jhs77_f_dashPower;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_jumpPower;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_jumpPower
	{
		get
		{
			if(_ufle12jhs77_f_jumpPower==null || _ufle12jhs77_f_jumpPower.IsDeleted) _ufle12jhs77_f_jumpPower=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5190816218476410183,9141953717292721290));
			return _ufle12jhs77_f_jumpPower;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_attSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_attSpeed
	{
		get
		{
			if(_ufle12jhs77_f_attSpeed==null || _ufle12jhs77_f_attSpeed.IsDeleted) _ufle12jhs77_f_attSpeed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4957189377571619166,3665004102090819982));
			return _ufle12jhs77_f_attSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_dashCnt;
	public static BansheeGz.BGDatabase.BGFieldInt _f_dashCnt
	{
		get
		{
			if(_ufle12jhs77_f_dashCnt==null || _ufle12jhs77_f_dashCnt.IsDeleted) _ufle12jhs77_f_dashCnt=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4718578035614315806,4473164736814075830));
			return _ufle12jhs77_f_dashCnt;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_dashCoolTime;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_dashCoolTime
	{
		get
		{
			if(_ufle12jhs77_f_dashCoolTime==null || _ufle12jhs77_f_dashCoolTime.IsDeleted) _ufle12jhs77_f_dashCoolTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5392769588600640680,8110546161694491553));
			return _ufle12jhs77_f_dashCoolTime;
		}
	}
	private static readonly d_MonsterData.Factory _factory0_PFS = new d_MonsterData.Factory();
	private static readonly d_PlayerData.Factory _factory1_PFS = new d_PlayerData.Factory();
	private static readonly d_NpcReward.Factory _factory2_PFS = new d_NpcReward.Factory();
	private static readonly d_ObjData.Factory _factory3_PFS = new d_ObjData.Factory();
	private static readonly d_test.Factory _factory4_PFS = new d_test.Factory();
	private static readonly d_TextTest.Factory _factory5_PFS = new d_TextTest.Factory();
	private static readonly d_TalkData.Factory _factory6_PFS = new d_TalkData.Factory();
	private d_PlayerData() : base(MetaDefault)
	{
	}
	private d_PlayerData(BGId id) : base(MetaDefault, id)
	{
	}
	private d_PlayerData(BGMetaEntity meta) : base(meta)
	{
	}
	private d_PlayerData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static d_PlayerData FindEntity(Predicate<d_PlayerData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((d_PlayerData) entity)) as d_PlayerData;
	}
	public static List<d_PlayerData> FindEntities(Predicate<d_PlayerData> filter, List<d_PlayerData> result=null, Comparison<d_PlayerData> sort=null)
	{
		result = result ?? new List<d_PlayerData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((d_PlayerData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((d_PlayerData) e1, (d_PlayerData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((d_PlayerData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<d_PlayerData> action, Predicate<d_PlayerData> filter=null, Comparison<d_PlayerData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((d_PlayerData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((d_PlayerData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((d_PlayerData)e1,(d_PlayerData)e2));
	}
	public static d_PlayerData GetEntity(BGId entityId)
	{
		return (d_PlayerData) MetaDefault.GetEntity(entityId);
	}
	public static d_PlayerData GetEntity(int index)
	{
		return (d_PlayerData) MetaDefault[index];
	}
	public static d_PlayerData GetEntity(string entityName)
	{
		return (d_PlayerData) MetaDefault.GetEntity(entityName);
	}
	public static d_PlayerData NewEntity()
	{
		return (d_PlayerData) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class d_NpcReward : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new d_NpcReward(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new d_NpcReward(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5116796182263541059,14167254850889349299));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.Single f_Percent
	{
		get
		{
			return _f_Percent[Index];
		}
		set
		{
			_f_Percent[Index] = value;
		}
	}
	public System.Single f_GainPercent
	{
		get
		{
			return _f_GainPercent[Index];
		}
		set
		{
			_f_GainPercent[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5032724058970167161,12814021863223699891));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_Percent;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_Percent
	{
		get
		{
			if(_ufle12jhs77_f_Percent==null || _ufle12jhs77_f_Percent.IsDeleted) _ufle12jhs77_f_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4957202088352575472,9650016986903505063));
			return _ufle12jhs77_f_Percent;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_f_GainPercent;
	public static BansheeGz.BGDatabase.BGFieldFloat _f_GainPercent
	{
		get
		{
			if(_ufle12jhs77_f_GainPercent==null || _ufle12jhs77_f_GainPercent.IsDeleted) _ufle12jhs77_f_GainPercent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5726433121939456909,9732432347216093578));
			return _ufle12jhs77_f_GainPercent;
		}
	}
	private static readonly d_MonsterData.Factory _factory0_PFS = new d_MonsterData.Factory();
	private static readonly d_PlayerData.Factory _factory1_PFS = new d_PlayerData.Factory();
	private static readonly d_NpcReward.Factory _factory2_PFS = new d_NpcReward.Factory();
	private static readonly d_ObjData.Factory _factory3_PFS = new d_ObjData.Factory();
	private static readonly d_test.Factory _factory4_PFS = new d_test.Factory();
	private static readonly d_TextTest.Factory _factory5_PFS = new d_TextTest.Factory();
	private static readonly d_TalkData.Factory _factory6_PFS = new d_TalkData.Factory();
	private d_NpcReward() : base(MetaDefault)
	{
	}
	private d_NpcReward(BGId id) : base(MetaDefault, id)
	{
	}
	private d_NpcReward(BGMetaEntity meta) : base(meta)
	{
	}
	private d_NpcReward(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static d_NpcReward FindEntity(Predicate<d_NpcReward> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((d_NpcReward) entity)) as d_NpcReward;
	}
	public static List<d_NpcReward> FindEntities(Predicate<d_NpcReward> filter, List<d_NpcReward> result=null, Comparison<d_NpcReward> sort=null)
	{
		result = result ?? new List<d_NpcReward>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((d_NpcReward) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((d_NpcReward) e1, (d_NpcReward) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((d_NpcReward) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<d_NpcReward> action, Predicate<d_NpcReward> filter=null, Comparison<d_NpcReward> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((d_NpcReward) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((d_NpcReward) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((d_NpcReward)e1,(d_NpcReward)e2));
	}
	public static d_NpcReward GetEntity(BGId entityId)
	{
		return (d_NpcReward) MetaDefault.GetEntity(entityId);
	}
	public static d_NpcReward GetEntity(int index)
	{
		return (d_NpcReward) MetaDefault[index];
	}
	public static d_NpcReward GetEntity(string entityName)
	{
		return (d_NpcReward) MetaDefault.GetEntity(entityName);
	}
	public static d_NpcReward NewEntity()
	{
		return (d_NpcReward) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class d_ObjData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new d_ObjData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new d_ObjData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5325377636895802418,15441573546148841095));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.Int32 f_ID
	{
		get
		{
			return _f_ID[Index];
		}
		set
		{
			_f_ID[Index] = value;
		}
	}
	public System.Boolean f_IsNpc
	{
		get
		{
			return _f_IsNpc[Index];
		}
		set
		{
			_f_IsNpc[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5177412833265342228,4611984714222901940));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_f_ID;
	public static BansheeGz.BGDatabase.BGFieldInt _f_ID
	{
		get
		{
			if(_ufle12jhs77_f_ID==null || _ufle12jhs77_f_ID.IsDeleted) _ufle12jhs77_f_ID=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4736580708601719139,16708027799691518382));
			return _ufle12jhs77_f_ID;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_f_IsNpc;
	public static BansheeGz.BGDatabase.BGFieldBool _f_IsNpc
	{
		get
		{
			if(_ufle12jhs77_f_IsNpc==null || _ufle12jhs77_f_IsNpc.IsDeleted) _ufle12jhs77_f_IsNpc=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5426706084384915638,1236695535081806498));
			return _ufle12jhs77_f_IsNpc;
		}
	}
	private static readonly d_MonsterData.Factory _factory0_PFS = new d_MonsterData.Factory();
	private static readonly d_PlayerData.Factory _factory1_PFS = new d_PlayerData.Factory();
	private static readonly d_NpcReward.Factory _factory2_PFS = new d_NpcReward.Factory();
	private static readonly d_ObjData.Factory _factory3_PFS = new d_ObjData.Factory();
	private static readonly d_test.Factory _factory4_PFS = new d_test.Factory();
	private static readonly d_TextTest.Factory _factory5_PFS = new d_TextTest.Factory();
	private static readonly d_TalkData.Factory _factory6_PFS = new d_TalkData.Factory();
	private d_ObjData() : base(MetaDefault)
	{
	}
	private d_ObjData(BGId id) : base(MetaDefault, id)
	{
	}
	private d_ObjData(BGMetaEntity meta) : base(meta)
	{
	}
	private d_ObjData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static d_ObjData FindEntity(Predicate<d_ObjData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((d_ObjData) entity)) as d_ObjData;
	}
	public static List<d_ObjData> FindEntities(Predicate<d_ObjData> filter, List<d_ObjData> result=null, Comparison<d_ObjData> sort=null)
	{
		result = result ?? new List<d_ObjData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((d_ObjData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((d_ObjData) e1, (d_ObjData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((d_ObjData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<d_ObjData> action, Predicate<d_ObjData> filter=null, Comparison<d_ObjData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((d_ObjData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((d_ObjData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((d_ObjData)e1,(d_ObjData)e2));
	}
	public static d_ObjData GetEntity(BGId entityId)
	{
		return (d_ObjData) MetaDefault.GetEntity(entityId);
	}
	public static d_ObjData GetEntity(int index)
	{
		return (d_ObjData) MetaDefault[index];
	}
	public static d_ObjData GetEntity(string entityName)
	{
		return (d_ObjData) MetaDefault.GetEntity(entityName);
	}
	public static d_ObjData NewEntity()
	{
		return (d_ObjData) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class d_test : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new d_test(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new d_test(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5068426506735368450,18435362223144012972));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.String f_asd
	{
		get
		{
			return _f_asd[Index];
		}
		set
		{
			_f_asd[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4728235835174612428,11818337200047719576));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldText _ufle12jhs77_f_asd;
	public static BansheeGz.BGDatabase.BGFieldText _f_asd
	{
		get
		{
			if(_ufle12jhs77_f_asd==null || _ufle12jhs77_f_asd.IsDeleted) _ufle12jhs77_f_asd=(BansheeGz.BGDatabase.BGFieldText) MetaDefault.GetField(new BGId(5264517618484145554,17734090559426743704));
			return _ufle12jhs77_f_asd;
		}
	}
	private static readonly d_MonsterData.Factory _factory0_PFS = new d_MonsterData.Factory();
	private static readonly d_PlayerData.Factory _factory1_PFS = new d_PlayerData.Factory();
	private static readonly d_NpcReward.Factory _factory2_PFS = new d_NpcReward.Factory();
	private static readonly d_ObjData.Factory _factory3_PFS = new d_ObjData.Factory();
	private static readonly d_test.Factory _factory4_PFS = new d_test.Factory();
	private static readonly d_TextTest.Factory _factory5_PFS = new d_TextTest.Factory();
	private static readonly d_TalkData.Factory _factory6_PFS = new d_TalkData.Factory();
	private d_test() : base(MetaDefault)
	{
	}
	private d_test(BGId id) : base(MetaDefault, id)
	{
	}
	private d_test(BGMetaEntity meta) : base(meta)
	{
	}
	private d_test(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static d_test FindEntity(Predicate<d_test> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((d_test) entity)) as d_test;
	}
	public static List<d_test> FindEntities(Predicate<d_test> filter, List<d_test> result=null, Comparison<d_test> sort=null)
	{
		result = result ?? new List<d_test>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((d_test) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((d_test) e1, (d_test) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((d_test) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<d_test> action, Predicate<d_test> filter=null, Comparison<d_test> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((d_test) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((d_test) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((d_test)e1,(d_test)e2));
	}
	public static d_test GetEntity(BGId entityId)
	{
		return (d_test) MetaDefault.GetEntity(entityId);
	}
	public static d_test GetEntity(int index)
	{
		return (d_test) MetaDefault[index];
	}
	public static d_test GetEntity(string entityName)
	{
		return (d_test) MetaDefault.GetEntity(entityName);
	}
	public static d_test NewEntity()
	{
		return (d_test) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class d_TextTest : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new d_TextTest(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new d_TextTest(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5104085017216792405,5759051022695425210));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.Collections.Hashtable f_Talkt
	{
		get
		{
			return _f_Talkt[Index];
		}
		set
		{
			_f_Talkt[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4620728507512292195,16572606750686491020));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldHashtable _ufle12jhs77_f_Talkt;
	public static BansheeGz.BGDatabase.BGFieldHashtable _f_Talkt
	{
		get
		{
			if(_ufle12jhs77_f_Talkt==null || _ufle12jhs77_f_Talkt.IsDeleted) _ufle12jhs77_f_Talkt=(BansheeGz.BGDatabase.BGFieldHashtable) MetaDefault.GetField(new BGId(4837574275654267323,14902673064888142250));
			return _ufle12jhs77_f_Talkt;
		}
	}
	private static readonly d_MonsterData.Factory _factory0_PFS = new d_MonsterData.Factory();
	private static readonly d_PlayerData.Factory _factory1_PFS = new d_PlayerData.Factory();
	private static readonly d_NpcReward.Factory _factory2_PFS = new d_NpcReward.Factory();
	private static readonly d_ObjData.Factory _factory3_PFS = new d_ObjData.Factory();
	private static readonly d_test.Factory _factory4_PFS = new d_test.Factory();
	private static readonly d_TextTest.Factory _factory5_PFS = new d_TextTest.Factory();
	private static readonly d_TalkData.Factory _factory6_PFS = new d_TalkData.Factory();
	private d_TextTest() : base(MetaDefault)
	{
	}
	private d_TextTest(BGId id) : base(MetaDefault, id)
	{
	}
	private d_TextTest(BGMetaEntity meta) : base(meta)
	{
	}
	private d_TextTest(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static d_TextTest FindEntity(Predicate<d_TextTest> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((d_TextTest) entity)) as d_TextTest;
	}
	public static List<d_TextTest> FindEntities(Predicate<d_TextTest> filter, List<d_TextTest> result=null, Comparison<d_TextTest> sort=null)
	{
		result = result ?? new List<d_TextTest>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((d_TextTest) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((d_TextTest) e1, (d_TextTest) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((d_TextTest) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<d_TextTest> action, Predicate<d_TextTest> filter=null, Comparison<d_TextTest> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((d_TextTest) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((d_TextTest) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((d_TextTest)e1,(d_TextTest)e2));
	}
	public static d_TextTest GetEntity(BGId entityId)
	{
		return (d_TextTest) MetaDefault.GetEntity(entityId);
	}
	public static d_TextTest GetEntity(int index)
	{
		return (d_TextTest) MetaDefault[index];
	}
	public static d_TextTest GetEntity(string entityName)
	{
		return (d_TextTest) MetaDefault.GetEntity(entityName);
	}
	public static d_TextTest NewEntity()
	{
		return (d_TextTest) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class d_TalkData : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new d_TalkData(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new d_TalkData(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5730412772188250154,5372217023553720224));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String f_name
	{
		get
		{
			return _f_name[Index];
		}
		set
		{
			_f_name[Index] = value;
		}
	}
	public System.Collections.Hashtable f_Talk
	{
		get
		{
			return _f_Talk[Index];
		}
		set
		{
			_f_Talk[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_f_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _f_name
	{
		get
		{
			if(_ufle12jhs77_f_name==null || _ufle12jhs77_f_name.IsDeleted) _ufle12jhs77_f_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5050986942272665288,3311936001745295546));
			return _ufle12jhs77_f_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldHashtable _ufle12jhs77_f_Talk;
	public static BansheeGz.BGDatabase.BGFieldHashtable _f_Talk
	{
		get
		{
			if(_ufle12jhs77_f_Talk==null || _ufle12jhs77_f_Talk.IsDeleted) _ufle12jhs77_f_Talk=(BansheeGz.BGDatabase.BGFieldHashtable) MetaDefault.GetField(new BGId(5422955025095893301,12354346714646676890));
			return _ufle12jhs77_f_Talk;
		}
	}
	private static readonly d_MonsterData.Factory _factory0_PFS = new d_MonsterData.Factory();
	private static readonly d_PlayerData.Factory _factory1_PFS = new d_PlayerData.Factory();
	private static readonly d_NpcReward.Factory _factory2_PFS = new d_NpcReward.Factory();
	private static readonly d_ObjData.Factory _factory3_PFS = new d_ObjData.Factory();
	private static readonly d_test.Factory _factory4_PFS = new d_test.Factory();
	private static readonly d_TextTest.Factory _factory5_PFS = new d_TextTest.Factory();
	private static readonly d_TalkData.Factory _factory6_PFS = new d_TalkData.Factory();
	private d_TalkData() : base(MetaDefault)
	{
	}
	private d_TalkData(BGId id) : base(MetaDefault, id)
	{
	}
	private d_TalkData(BGMetaEntity meta) : base(meta)
	{
	}
	private d_TalkData(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static d_TalkData FindEntity(Predicate<d_TalkData> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((d_TalkData) entity)) as d_TalkData;
	}
	public static List<d_TalkData> FindEntities(Predicate<d_TalkData> filter, List<d_TalkData> result=null, Comparison<d_TalkData> sort=null)
	{
		result = result ?? new List<d_TalkData>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((d_TalkData) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((d_TalkData) e1, (d_TalkData) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((d_TalkData) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<d_TalkData> action, Predicate<d_TalkData> filter=null, Comparison<d_TalkData> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((d_TalkData) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((d_TalkData) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((d_TalkData)e1,(d_TalkData)e2));
	}
	public static d_TalkData GetEntity(BGId entityId)
	{
		return (d_TalkData) MetaDefault.GetEntity(entityId);
	}
	public static d_TalkData GetEntity(int index)
	{
		return (d_TalkData) MetaDefault[index];
	}
	public static d_TalkData GetEntity(string entityName)
	{
		return (d_TalkData) MetaDefault.GetEntity(entityName);
	}
	public static d_TalkData NewEntity()
	{
		return (d_TalkData) MetaDefault.NewEntity();
	}
}
#pragma warning restore 414
