using System;
using System.Collections.Generic;
using UnityEngine;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

[AddComponentMenu("BansheeGz/Generated/MonstaerData")]
public partial class MonstaerData : BGEntityGo
{
	public override BGMetaEntity MetaConstraint
	{
		get
		{
			return MetaDefault;
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5541529679651416247,12694959115498671276));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	public new System.String name
	{
		get
		{
			return _name[Entity.Index];
		}
		set
		{
			_name[Entity.Index] = value;
		}
	}
	public System.Single HP
	{
		get
		{
			return _HP[Entity.Index];
		}
		set
		{
			_HP[Entity.Index] = value;
		}
	}
	public System.Single Speed
	{
		get
		{
			return _Speed[Entity.Index];
		}
		set
		{
			_Speed[Entity.Index] = value;
		}
	}
	public System.Single Att
	{
		get
		{
			return _Att[Entity.Index];
		}
		set
		{
			_Att[Entity.Index] = value;
		}
	}
	public System.Single AttSpeed
	{
		get
		{
			return _AttSpeed[Entity.Index];
		}
		set
		{
			_AttSpeed[Entity.Index] = value;
		}
	}
	public System.Single AttRange
	{
		get
		{
			return _AttRange[Entity.Index];
		}
		set
		{
			_AttRange[Entity.Index] = value;
		}
	}
	public System.Int32 BloodCnt
	{
		get
		{
			return _BloodCnt[Entity.Index];
		}
		set
		{
			_BloodCnt[Entity.Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName __name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(__name==null || __name.IsDeleted) __name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5482723288733540880,5346102097766981796));
			return __name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __HP;
	public static BansheeGz.BGDatabase.BGFieldFloat _HP
	{
		get
		{
			if(__HP==null || __HP.IsDeleted) __HP=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4950423235664500010,3926055540254285238));
			return __HP;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __Speed;
	public static BansheeGz.BGDatabase.BGFieldFloat _Speed
	{
		get
		{
			if(__Speed==null || __Speed.IsDeleted) __Speed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4954302159585886804,18182605959822801078));
			return __Speed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __Att;
	public static BansheeGz.BGDatabase.BGFieldFloat _Att
	{
		get
		{
			if(__Att==null || __Att.IsDeleted) __Att=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5386574837232014502,12302216657383446919));
			return __Att;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __AttSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttSpeed
	{
		get
		{
			if(__AttSpeed==null || __AttSpeed.IsDeleted) __AttSpeed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5393305500155929347,9522114775973256611));
			return __AttSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat __AttRange;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttRange
	{
		get
		{
			if(__AttRange==null || __AttRange.IsDeleted) __AttRange=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4623783464383546280,12041723202635966869));
			return __AttRange;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt __BloodCnt;
	public static BansheeGz.BGDatabase.BGFieldInt _BloodCnt
	{
		get
		{
			if(__BloodCnt==null || __BloodCnt.IsDeleted) __BloodCnt=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4880881682560427246,977739060326613947));
			return __BloodCnt;
		}
	}
}
